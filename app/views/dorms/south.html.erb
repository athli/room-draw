<h1>Dorms#south</h1>
<p>Find me in app/views/dorms/south.html.erb</p>

<script src="http://d3js.org/d3.v4.min.js" charset="utf-8"></script>

 <style type="text/css">
/*Following Modal was taken from https://www.w3schools.com/howto/howto_css_modals.asp */
/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}
/* Modal Content */
.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
}
/* The Close Button */
.close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}
.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}
</style>

 <body>
<!--  <h2 style="text-align:center">
	Case Dorm
 	  </h2> -->
		<div class="container">
		<div class="row">
			<div class="col-md-2">
				<a href=/dorms><span style="font-size:2.5em;" class="glyphicon glyphicon-circle-arrow-left"></span> Go back</a>			</div>

		    <div class="col-md-7">
				<div class="btn-group">
					<button class="btn btn-default btn-md dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Change Dorms <span class="caret"></span>
					</button>

					<ul class="dropdown-menu">
				  	<li><a href="#">Atwood</a></li>
				  	<li><a href=/dorms/case>Case</a></li>
				  	<li><a href=/dorms/east>East</a></li>
				  	<li><a href="#">Drinkward</a></li>
				  	<li><a href="#">Linde</a></li>
				  	<li><a href=/dorms/north>North</a></li>
				  	<li class="active"><a href=/dorms/south>South</a></li>
				    <li><a href=/dorms/west>West</a></li>
					</ul>
			    </div>
			</div>

			<div class="col-md-3">
				<div class="btn-group">
					<button class="btn btn-default btn-md dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Switch Floor <span class="caret"></span>
					</button>

					<ul class="dropdown-menu">
				  	<li class = "active"><a href=/dorms/south>First Floor</a></li>
				  	<li><a href=/dorms/south2>Second Floor</a></li>
					</ul>
			    </div>
			</div>

			<h1><br></h1>
		</div>
	</div>


    <!-- The Modal -->
    <div id="myModal" class="modal">

      <!-- Modal content -->
      <div class="modal-content">
        <div class="modal-header">
          <span class="close">&times;</span>
          <h2>Pull request initiated</h2>
        </div>
        <div class="modal-body">
          <p>You have begun a pull request for this room</p>
          <p>The following form must be filled out in order to pull a room:</p>
                <div class="form-group">
                <label for="usr">roomNum</label>
                <input type="text" class="form-control" id="usr">
                </div>


                <div class="form-group">
                <label for="roommate">Roommate:</label>
                <input type="password" class="form-control" id="pwd">
                </div>
        </div>
      </div>

    </div>


</body>

<script>
var w = 1000;
var h = 750;
 dataset = [
{roomNum : '307', status: "empty", type: "Q", orient: "L"},
{roomNum : '305', status: "empty", type: "T", orient: "L"},
{roomNum : '303', status: "empty", type: "T", orient: "L"},
{roomNum : '301', status: "empty", type: "Q", orient: "L"},

{roomNum : '307', status: "empty", type: "Q", orient: "R"},
{roomNum : '305', status: "empty", type: "T", orient: "R"},
{roomNum : '303', status: "empty", type: "T", orient: "R"},
{roomNum : '301', status: "empty", type: "Q", orient: "R"},

{roomNum : '310', status: "empty", type: "S", orient: "U"},
{roomNum : '312', status: "empty", type: "S", orient: "U"},
{roomNum : '311', status: "empty", type: "S", orient: "U"},
{roomNum : '309', status: "empty", type: "S", orient: "U"},
]

var singleWidth = 80 
var tripleWidth = 100
var quadWidth = 100

var singleLength = 70
var tripleLength = 110
var quadLength = 160

var x = 100 //starting positions for left side 
var y = 40
for (var num = 0; num < 4; num++){	
	dataset[num].x = x 
	dataset[num].y = y
	if (dataset[num].type =="T"){
		y += tripleLength
	}
	if (dataset[num].type =="Q"){
		y += quadLength
	}
}
x = 670 //starting positions for right side 
y = 580
for (var num = 4; num < 8; num++){	
	if (dataset[num].type =="T"){
		y -= tripleLength 
	}
	if (dataset[num].type =="Q"){
		y -= quadLength
	}
	dataset[num].x = x 
	dataset[num].y = y
}
x = 510 //starting positions for upper side 
y = 80
for (var num = 8; num < 12; num++){	
	dataset[num].x = x 
	dataset[num].y = y
	x -= singleWidth
}


	var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);
	svg.selectAll("text")
	   .data(dataset)
	   .enter()
	   .append("text")
	   .text(function(d) {
	        return d.roomNum + '(' + d.type + ')';
	   })
	   .attr("x", function(d, i){
		    switch (d.orient){
		    	case "L":
			   		return Number(d.x)-50;
			 	case "R":
			 		if (d.type == "S"){
		    			return Number(d.x) + 80;
			   		}
			   		else{
			   			return Number(d.x) + 110;
			   		}
			   	case "U":
			   		return Number(d.x) + 15;
		    }
		   })
	   .attr("y", function(d, i){
			switch(d.orient){
				case "L":
			   		if (d.type == "Q"){
		    			return Number(d.y) + 80;
			   		}
			   		else{
			   			return Number(d.y) + 50;
			   		}
			   	case "R":
			   		if (d.type == "Q"){
		    			return Number(d.y) + 80;
			   		}
			   		else{
			   			return Number(d.y) + 50;
			   		}
			   	case "U":
			   		return d.y - 10;
		    }
		})
	   	.attr("font-family", "sans-serif")
		.attr("font-size", "14px")
	svg.selectAll("rect")
	   .data(dataset)
	   .enter()
	   .append("rect")
	   .attr("x", function(d, i){
	   	return d.x;
	   })
	   .attr("y", function(d, i){
	   	return d.y;
	   })
	   .attr('fill', "white")
	   .attr('stroke', 'black')
	   .attr("width", function(d){
		   	switch (d.orient){
		   		case "L":
					if(d.type == "T")
						 // because of the orientation the width on the left and right is really the length
						return tripleWidth
					else{
						return quadWidth
					}
			   	case "R":
					if(d.type == "T")
						return tripleWidth
					else{
						return quadWidth
					}
				case "U":
					return singleWidth
		   	}
	   })
	   .attr("height", function(d){
		   	switch(d.orient){
				case "L":
					if(d.type == "T")
						return tripleLength
					else{
						return quadLength
					}
				case "R":
					if(d.type == "T")
						return tripleLength
					else{
						return quadLength
					}
					
	 			case "U":
					return singleLength
			}
		})
	   .on("mouseover", function(d, i){
	   		d3.select(this).attr("fill", "lightgray");
	   })
	   .on("mouseout", function(d, i){
	   		d3.select(this).attr("fill", "white");
	   })
     .on("click", function(d, i){
       modal.style.display = "block";
    })

    ;
// Get the modal
var modal = document.getElementById('myModal');
// Get the button that opens the modal
var btn = document.getElementById("myBtn");
// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];
// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}

</script>
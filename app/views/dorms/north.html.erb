<h1>Dorms#north</h1>
<p>Find me in app/views/dorms/north.html.erb</p>
<script src="http://d3js.org/d3.v4.min.js" charset="utf-8"></script>

 <style type="text/css">
/*Following Modal was taken from https://www.w3schools.com/howto/howto_css_modals.asp */
/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}
/* Modal Content */
.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
}

/* The Close Button */
.close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}
.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

</style>

<body>

	<div class="container">
		<div class="row">
			<div class="col-md-2">
				<a href=/dorms><span style="font-size:2.5em;" class="glyphicon glyphicon-circle-arrow-left"></span> Go back</a>			</div>

		    <div class="col-md-7">
				<div class="btn-group">
					<button class="btn btn-default btn-md dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Change Dorms <span class="caret"></span>
					</button>

					<ul class="dropdown-menu">
				  	<li><a href="#">Atwood</a></li>
				  	<li><a href=/dorms/case>Case</a></li>
				  	<li><a href=/dorms/east>East</a></li>
				  	<li><a href="#">Drinkward</a></li>
				  	<li><a href="#">Linde</a></li>
				  	<li class="active"><a href=/dorms/north>North</a></li>
				  	<li><a href=/dorms/south>South</a></li>
				    <li><a href=/dorms/west>West</a></li>
					</ul>
			    </div>
			</div>

			<div class="col-md-3">
				<div class="btn-group">
					<button class="btn btn-default btn-md dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Switch Floor <span class="caret"></span>
					</button>

					<ul class="dropdown-menu">
				  	<li class = "active"><a href=/dorms/north>First Floor</a></li>
				  	<li><a href=/dorms/north2>Second Floor</a></li>
					</ul>
			    </div>
			</div>

			<h1><br></h1>
		</div>
	</div>

    <!-- The Modal -->
    <div id="myModal" class="modal">

      <!-- Modal content -->
		<div class="modal-content">
			<div class="modal-header">
				<span class="close">&times;</span>
				<h2>Pull request initiated</h2>
			</div>

			<div class="modal-body">
			<p>You have begun a pull request for this room</p>
			<p>The following form must be filled out in order to pull a room:</p>
				<div class="form-group">
					<label for="usr">Room number</label>
					<input type="text" class="form-control" id="usr" required>
				</div>



				<div class="form-group">
					<span>How many people are you pulling in?</span>
					<label for="0-roommates"> <input type="radio" id="0-roommates" name="roommate-nums" /> 0 </label>
					<label for="1-roommates"> <input class="require-if-active" type="radio" id="1-roommates" name="roommate-nums" data-require-pair="#roommate-1" /> 1 </label>
					<label for="2-roommates"> <input class="require-if-active" type="radio" id="2-roommates" name="roommate-nums" data-require-pair="#roommate-2" /> 2 </label>
					<label for="3-roommates"> <input class="require-if-active" type="radio" id="3-roommates" name="roommate-nums" data-require-pair="#roommate-3" /> 3 </label>
					<label for="4-roommates"> <input class="require-if-active" type="radio" id="4-roommates" name="roommate-nums" data-require-pair="#roommate-4" /> 4 </label>
					<label for="5-roommates"> <input class="require-if-active" type="radio" id="5-roommates" name="roommate-nums" data-require-pair="#roommate-5" /> 5 </label>

					<div id="roommate-1" style="display: none">
						Roommate's Name: <input type="text" id="name"/>
					</div>

					<div id="roommate-2" style="display: none">
						Roommate 1: <input type="text" id="name"/>
						Roommate 2: <input type="text" id="name"/>
					</div>

					<div id="roommate-3" style="display: none">
						Roommate 1: <input type="text" id="name"/>
						Roommate 2: <input type="text" id="name"/>
						Roommate 3: <input type="text" id="name"/>
					</div>

					<div id="roommate-4" style="display: none">
						Roommate 1: <input type="text" id="name"/>
						Roommate 2: <input type="text" id="name"/>
						Roommate 3: <input type="text" id="name"/>
						Roommate 4: <input type="text" id="name"/>
					</div>

					<div id="roommate-5" style="display: none">
						Roommate 1: <input type="text" id="name"/>
						Roommate 2: <input type="text" id="name"/>
						Roommate 3: <input type="text" id="name"/>
						Roommate 4: <input type="text" id="name"/>
						Roommate 5: <input type="text" id="name"/>
					</div>
				</div>




				<div class="form-group">
					<input type="submit" class="submit-btn">
				</div>
			</div>
		</div>  <!-- End of modal content -->

	</div>  <!-- End of modal -->
</body>


<script>
var w = 1000;
var h = 750;
 dataset = [
{roomNum : '215', status: "empty", type: "D", orient: "L"},
{roomNum : '213', status: "empty", type: "D", orient: "L"},
{roomNum : '211', status: "empty", type: "D", orient: "L"},
{roomNum : '209', status: "empty", type: "D", orient: "L"},
{roomNum : '207', status: "empty", type: "D", orient: "L"},
{roomNum : '205', status: "empty", type: "D", orient: "L"},
{roomNum : '203', status: "empty", type: "D", orient: "L"},
{roomNum : '201', status: "empty", type: "D", orient: "L"},

{roomNum : '221', status: "empty", type: "D", orient: "D"},
{roomNum : '225', status: "empty", type: "D", orient: "D"},
{roomNum : '226', status: "empty", type: "S", orient: "D"},
{roomNum : '222', status: "empty", type: "S", orient: "D"},

{roomNum : '216', status: "empty", type: "D", orient: "R"},
{roomNum : '214', status: "empty", type: "D", orient: "R"},
{roomNum : '212', status: "empty", type: "D", orient: "R"},
{roomNum : '210', status: "empty", type: "D", orient: "R"},
{roomNum : '208', status: "empty", type: "D", orient: "R"},
{roomNum : '206', status: "empty", type: "D", orient: "R"},
{roomNum : '204', status: "empty", type: "D", orient: "R"},
{roomNum : '202', status: "empty", type: "D", orient: "R"},

{roomNum : '220', status: "empty", type: "S", orient: "U"},
{roomNum : '224', status: "empty", type: "S", orient: "U"},
{roomNum : '228', status: "empty", type: "S", orient: "U"},
{roomNum : '227', status: "empty", type: "S", orient: "U"},
{roomNum : '223', status: "empty", type: "S", orient: "U"},
{roomNum : '219', status: "empty", type: "S", orient: "U"},
]

var singleWidth = 60 
var doubleWidth = 60
var singleLength = 80
var doubleLength = 100

var x = 100 //starting positions for left side 
var y = 90
for (var num = 0; num < 8; num++){	
	dataset[num].x = x 
	dataset[num].y = y
	if (dataset[num].type =="D"){
		y += doubleWidth
	}
	if (dataset[num].type =="S")
		y += singleWidth 
}
x = 260 //starting positions for lower side, doubles
y = 160
for (var num = 8; num < 10; num++){	
	dataset[num].x = x 
	dataset[num].y = y
	x += doubleWidth
}
x = 500 //starting positions for lower side, singles
y = 180
for (var num = 10; num < 12; num++){	
	dataset[num].x = x 
	dataset[num].y = y
	x += singleWidth 
}
x = 680 //starting positions for right side 
y = 570
for (var num = 12; num < 20; num++){	
	if (dataset[num].type =="D"){
		y -= doubleWidth
	}
	if (dataset[num].type =="S")
		y -= singleWidth 
	dataset[num].x = x 
	dataset[num].y = y
}
x = 620 //starting positions for upper side 
y = 30
for (var num = 20; num < 26; num++){	
	if (dataset[num].type =="D"){
		x -= doubleWidth
	}
	if (dataset[num].type =="S")
		x -= singleWidth 
	dataset[num].x = x 
	dataset[num].y = y
}


	var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);
	svg.selectAll("text")
	   .data(dataset)
	   .enter()
	   .append("text")
	   .text(function(d) {
	        return d.roomNum + '(' + d.type + ')';
	   })
	   	   .attr("x", function(d, i){
		    switch (d.orient){
		    	case "L":
			   		return Number(d.x) - 50;
			   	case "D":
			   	if (d.type == "S"){
		    			return Number(d.x) + 10;
			   		}
			   		else{
			   			return Number(d.x) + 5;
			   		}
			 	case "R":
			   		return Number(d.x) + 110;
			   	case "U":
			   		return Number(d.x) + 10;
		    }
		   })
	   .attr("y", function(d, i){
			switch(d.orient){
				case "L":
			   		return Number(d.y) + 20;
			   	case "D":
			   		if (d.type == "S"){
		    			return Number(d.y) + 100;
			   		}
			   		else{
			   			return Number(d.y) + 120;
			   		}
			   	case "R":
			   		return Number(d.y) + 20;
			   	case "U":
			   		return d.y - 10;
		    }
		})
	   	.attr("font-family", "sans-serif")
		.attr("font-size", "14px")
	svg.selectAll("rect")
	   .data(dataset)
	   .enter()
	   .append("rect")
	   .attr("x", function(d, i){
	   	return d.x;
	   })
	   .attr("y", function(d, i){
	   	return d.y;
	   })
	   .attr('fill', "white")
	   .attr('stroke', 'black')
	   .attr("width", function(d){
		   	switch (d.orient){
		   		case "L":
				   	return doubleLength  // because of the orientation the width on the left and right is really the length
			   	case "D":
					return singleWidth

			   	case "R":
				   	return doubleLength
				case "U":
					if(d.type == "S")
						return singleWidth
					else{
						return doubleWidth
					}
		   	}
	   })
	   .attr("height", function(d){
		   	switch(d.orient){
				case "L":
					return doubleWidth

				case "D":
					if(d.type == "S")
						return singleLength
					else{
						return doubleLength
					}
				case "R":
					return doubleWidth
					
	 			case "U":
					if(d.type == "S")
						return singleLength
					else{
						return doubleLength
					}
			}
		})
	   .on("mouseover", function(d, i){
	   		d3.select(this).attr("fill", "lightgray");
	   })
	   .on("mouseout", function(d, i){
	   		d3.select(this).attr("fill", "white");
	   })
     .on("click", function(d, i){
       modal.style.display = "block";
    })

    ;
// Get the modal
var modal = document.getElementById('myModal');
// Get the button that opens the modal
var btn = document.getElementById("myBtn");
// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];
// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}
// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}
window.onkeyup = function(event) {
	if (event.keyCode == 27) {
		modal.style.display = "none";
	}
}
</script>


<!-- Script for using radio buttons to show input field on the pull request
	General code structure adapted from: https://www.aspsnippets.com/Articles/Show-Hide-DIV-with-TextBox-based-on-RadioButton-selection-checked-unchecked-using-JavaScript-and-jQuery.aspx 

	"require-if active" from: https://css-tricks.com/exposing-form-fields-radio-button-css/ !-->
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("input[name='roommate-nums']").click(function () {
            if ($("#1-roommates").is(":checked")) {
                $("#roommate-1").show(); $("#roommate-2").hide(); $("#roommate-3").hide(); $("#roommate-4").hide(); $("#roommate-5").hide();
            } else if ($("#2-roommates").is(":checked")) {
                $("#roommate-1").hide(); $("#roommate-2").show(); $("#roommate-3").hide(); $("#roommate-4").hide(); $("#roommate-5").hide();
            } else if ($("#3-roommates").is(":checked")) {
                $("#roommate-1").hide(); $("#roommate-2").hide(); $("#roommate-3").show(); $("#roommate-4").hide(); $("#roommate-5").hide();
            } else if ($("#4-roommates").is(":checked")) {
                $("#roommate-1").hide(); $("#roommate-2").hide(); $("#roommate-3").hide(); $("#roommate-4").show(); $("#roommate-5").hide();
            } else if ($("#5-roommates").is(":checked")) {
                $("#roommate-1").hide(); $("#roommate-2").hide(); $("#roommate-3").hide(); $("#roommate-4").hide(); $("#roommate-5").show();
            } else {
                $("#roommate-1").hide(); $("#roommate-2").hide(); $("#roommate-3").hide(); $("#roommate-4").hide(); $("#roommate-5").hide();            
            } 
        });
	    // find each input that may be hidden or not
	    $(".require-if-active").each(function() {
	      var el = $(this);
	      // find the pairing radio or checkbox
	      if ($(el.data("require-pair")).is(":checked")) {
	        // if its checked, the field should be required
	        el.prop("required", true);
	      } else {
	        // otherwise it should not
	        el.prop("required", false);
	      }
	    });
    });
</script>
